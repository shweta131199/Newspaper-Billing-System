import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.sql.*;

class cust_details extends JFrame implements ActionListener,ItemListener 
{
	JLabel lid,lnm,laddr,lphnno,lemail,l,title;
	JButton save,updt,dlt,clr,bck,srch,show,ext;
	JTextField tid,tnm,taddr,tphnno,temail,t;
	JRadioButton srch_nm,srch_pno;
	ButtonGroup grp;
	JPanel pnl;
	List li;
	JTable table;
	
	String colHead[] = {"C-ID","Name","Address","Phone No.","Mail-ID"};	
	Object data[][] = {};
	int r_cnt=0,i,id,flg=0;
	
	Connection cn;
	Statement stm;
	ResultSet rs;
	PreparedStatement prstm;
	String sql;
	
	cust_details()
	{
		super("Customer Details");
		setSize(1300,900);
		setLocation(0,0);
		setLayout(null);
		
		li = new List();

		title = new JLabel("Customer Details");
		lid = new JLabel("Customer ID :");
		lnm = new JLabel("Name        :");
		laddr = new JLabel("Address    :");
		lphnno = new JLabel("Contact Number:");
		lemail = new JLabel("Email ID :");
		l = new JLabel("Enter Data    :");

		save = new JButton("ADD");
		updt = new JButton("UPDATE");
		dlt = new JButton("DELETE");
		clr = new JButton("CLEAR");
		bck = new JButton("BACK");
		srch = new JButton("SEARCH");
		show = new JButton("SHOW");
		ext = new JButton("EXIT");

		tid = new JTextField();
		tnm = new JTextField();
		taddr = new JTextField();
		tphnno = new JTextField();
		temail = new JTextField();
		t = new JTextField();
		
		srch_nm = new JRadioButton("Search by Name",true);
		srch_pno = new JRadioButton("Search by Contact No");
		
		grp = new ButtonGroup();
		pnl = new JPanel();
		
		add(srch_nm);		add(srch_pno);
		grp.add(srch_nm);	grp.add(srch_pno);
		
		title.setFont(new Font("Arial",Font.BOLD,40));
		lid.setFont(new Font("Arial",Font.PLAIN,20));
		lnm.setFont(new Font("Arial",Font.PLAIN,20));	
		laddr.setFont(new Font("Arial",Font.PLAIN,20));
		lphnno.setFont(new Font("Arial",Font.PLAIN,20));
		lemail.setFont(new Font("Arial",Font.PLAIN,20));
		l.setFont(new Font("Arial",Font.PLAIN,20));
		
		tid.setFont(new Font("Arial",Font.PLAIN,20));
		tnm.setFont(new Font("Arial",Font.PLAIN,20));	
		taddr.setFont(new Font("Arial",Font.PLAIN,20));
		tphnno.setFont(new Font("Arial",Font.PLAIN,20));
		temail.setFont(new Font("Arial",Font.PLAIN,20));
		t.setFont(new Font("Arial",Font.PLAIN,20));
		
		srch_nm.setFont(new Font("Arial",Font.PLAIN,20));
		srch_pno.setFont(new Font("Arial",Font.PLAIN,20));
		
		save.setFont(new Font("Arial",Font.PLAIN,20));
		updt.setFont(new Font("Arial",Font.PLAIN,20));	
		dlt.setFont(new Font("Arial",Font.PLAIN,20));
		clr.setFont(new Font("Arial",Font.PLAIN,20));	
		bck.setFont(new Font("Arial",Font.PLAIN,20));
		srch.setFont(new Font("Arial",Font.PLAIN,20));
		show.setFont(new Font("Arial",Font.PLAIN,20));
		ext.setFont(new Font("Arial",Font.PLAIN,20));
		
		li.setFont(new Font("Arial",Font.PLAIN,20));
			
		add(lid);	add(lnm);	add(laddr);		add(lphnno);	add(lemail);		
		add(tid);	add(tnm);	add(taddr);		add(tphnno);	add(temail);		
		add(save);	add(updt);	add(dlt);	add(clr);	add(bck);	add(show);	add(srch); add(ext);		
		add(l);		add(t);		add(title);
		
		add(pnl);		pnl.add(li);
		pnl.add(srch_nm);	pnl.add(srch_pno);
		pnl.add(l);		pnl.add(t);
		pnl.setLayout(null);
		pnl.setVisible(false);
		pnl.setBackground(Color.PINK);

		title.setBounds(400,50,1000,50);
		lid.setBounds(100,150,150,30);
		lnm.setBounds(520,150,150,30);
		laddr.setBounds(100,200,150,30);
		lphnno.setBounds(520,200,150,30);
		lemail.setBounds(100,260,150,30);
		l.setBounds(20,70,150,30);
		
		tid.setBounds(270,150,200,30);
		tnm.setBounds(700,150,150,30);
		taddr.setBounds(270,200,150,30);
		tphnno.setBounds(700,200,150,30);
		temail.setBounds(270,260,150,30);
		t.setBounds(180,70,250,30);
		
		clr.setBounds(100,330,100,30);	
		save.setBounds(230,330,150,30);
		updt.setBounds(400,330,150,30);
		dlt.setBounds(580,330,150,30);
		bck.setBounds(100,380,100,30);
		ext.setBounds(230,380,150,30);
		srch.setBounds(400,380,150,30);
		show.setBounds(580,380,150,30);
		
		srch_nm.setBounds(10,10,180,30);
		srch_pno.setBounds(200,10,230,30);
		
		pnl.setBounds(750,300,500,500);
		li.setBounds(10,150,410,420);
		
		clr.setMnemonic('C');
		save.setMnemonic('A');
		updt.setMnemonic('U');
		dlt.setMnemonic('D');
		srch.setMnemonic('S');
		show.setMnemonic('h');
		bck.setMnemonic('K');
		ext.setMnemonic('X');
		
		clr.setToolTipText("Click here to Clear Fields");
		save.setToolTipText("Click here to Add Record");
		updt.setToolTipText("Click here to Update Record");
		dlt.setToolTipText("Click here to Delete Record");
		srch.setToolTipText("Click here to Search Record");
		show.setToolTipText("Click here to Show Record");
		bck.setToolTipText("Click here to go Back page");
		ext.setToolTipText("Click here to Exit");
		
		try
		{
			cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/newspaper","root","");
			stm =  cn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		}

		catch(Exception ex)
		{
			JOptionPane.showMessageDialog(null,"Invalid Operation","Database Connection Error",JOptionPane.ERROR_MESSAGE);
		}
		
		t.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent e)
			{
				if(srch_nm.isSelected())
				{
					char c = e.getKeyChar();
						
					if(Character.isLetter(c) || c == KeyEvent.VK_SPACE)
						super.keyTyped(e);
					
					else
					{
						e.consume();
						Toolkit tk = Toolkit.getDefaultToolkit();
						tk.beep();
					}
				}
					
				else if(srch_pno.isSelected())
				{
					char c = e.getKeyChar();
					
					if(Character.isDigit(c) && t.getText().length()<10)
						super.keyTyped(e);
					
					else
					{
						e.consume();
						Toolkit tk = Toolkit.getDefaultToolkit();
						tk.beep();
					}
				}
				
				if(e.getKeyChar()==KeyEvent.VK_ENTER)
				{
					try
					{
						li.clear();
						if(srch_nm.isSelected())
							rs = stm.executeQuery("select * from cust_info1 where c_name like '%"+t.getText()+"%'");
						else
							rs = stm.executeQuery("select * from cust_info1 where c_phone like '%"+t.getText()+"%'");
						
						while(rs.next())
							li.addItem(rs.getString(2)+" - "+rs.getString(4));
					}

					catch(Exception ex)
					{
						JOptionPane.showMessageDialog(null,"Invalid Operation","ComboBox Error",JOptionPane.ERROR_MESSAGE);
					}
				}
			}
		});

		text_validator(tphnno);
		text_validator1(tnm);
		
		getMax();
		tid.setEditable(false);
		
		save.addActionListener(this);
		updt.addActionListener(this);
		dlt.addActionListener(this);
		clr.addActionListener(this);
		bck.addActionListener(this);
		srch.addActionListener(this);
		show.addActionListener(this);
		ext.addActionListener(this);
		li.addItemListener(this);

		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);		
	}
	
	void text_validator(final JTextField tt)
	{
		tt.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent e)
			{
				if(tt.getText().length() < 10 && e.getKeyChar() >= '0' && e.getKeyChar() <= '9')
					super.keyTyped(e);
					
				else
				{
					e.consume();						
					Toolkit tk = Toolkit.getDefaultToolkit();
					tk.beep();
				}
			}
		});
	}
	
	void text_validator1(final JTextField tt)
	{
		tt.addKeyListener(new KeyAdapter()
		{
			public void keyTyped(KeyEvent e)
			{
				if(e.getKeyChar() >= 'A' && e.getKeyChar() <= 'Z' || e.getKeyChar() >= 'a' && e.getKeyChar() <= 'z' || e.getKeyChar()==' ')
					super.keyTyped(e);
					
				else
				{
					e.consume();						
					Toolkit tk = Toolkit.getDefaultToolkit();
					tk.beep();
				}
			}
		});
	}
	
	public void dispTab()
	{
		try
		{
			rs = stm.executeQuery("select count(*) from cust_info1");
			rs.next();
						
			r_cnt = rs.getInt(1);
			data = new String[r_cnt][5];
						
			rs = stm.executeQuery("select * from cust_info1 order by c_id");
			i=0;
			while(rs.next())
			{
				data[i][0] = rs.getString(1);
				data[i][1] = rs.getString(2);
				data[i][2] = rs.getString(3);
				data[i][3] = rs.getString(4);
				data[i][4] = rs.getString(5);
				i++;
			}
						
			table = new JTable(data,colHead);
			add(table);
			table.setEnabled(false);
					
			int v = ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED;
			int h = ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED;				
						
			JScrollPane jsp = new JScrollPane(table,v,h);
			add(jsp);
			jsp.setBounds(900,150,300,300);
		}

		catch(Exception ex)
		{
			JOptionPane.showMessageDialog(null,"Invalid Operation","Table Error",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void refresh()
	{
		tid.setText("");
		tnm.setText("");
		taddr.setText("");
		tphnno.setText("");
		temail.setText("");
		t.setText("");
		pnl.setVisible(false);
		save.setEnabled(true);
	}
	
	void getMax()
	{
		try
		{
			sql = "select max(c_id) from cust_info1";
			rs = stm.executeQuery(sql);
			rs.next();
			id = rs.getInt(1);
			id++;
			tid.setText(""+id);
		}

		catch(Exception ex)
		{
			id=1;
			tid.setText(""+id);
		}
	}

	public void actionPerformed(ActionEvent e)
	{
		try
		{
			if(e.getSource()==clr)
			{
				refresh();
				getMax();
			}
			
			if(e.getSource()==save)
			{
				if(tid.getText().length()==0 || tnm.getText().length()==0 || taddr.getText().length()==0 || tphnno.getText().length()==0 || temail.getText().length()==0)
						
					JOptionPane.showMessageDialog(null,"All fields are required !!!","Insert Error",JOptionPane.WARNING_MESSAGE);
							
				else if(tid.getText().length()<15 && tnm.getText().length()<15 && taddr.getText().length()<15 && tphnno.getText().length()==10 && temail.getText().length()<50)
				{
					sql = "insert into cust_info1 values("+tid.getText()+",'"+tnm.getText()+"','"+taddr.getText()+"',"+tphnno.getText()+",'"+temail.getText()+"')";
											
					prstm =  cn.prepareStatement(sql);
					prstm.execute();
					prstm.close();
											
					JOptionPane.showMessageDialog(null,"*** Record Successfully Saved ***");
					dispTab();
					refresh();
					getMax();
				}
				
				else
				{
					JOptionPane.showMessageDialog(null,"*** Please Check Mobile Number ***");
	
				}
			}
			
			if(e.getSource()==dlt)
			{
				try
				{
					if(flg==0)
						JOptionPane.showMessageDialog(null,"Search the Record Before Delete !!!","Delete Error",JOptionPane.WARNING_MESSAGE);
					
					else
					{
						if(tid.getText().length()==0 || tnm.getText().length()==0 || taddr.getText().length()==0 || tphnno.getText().length()==0 || temail.getText().length()==0)
							
							JOptionPane.showMessageDialog(null,"All fields are required !!!","DELETE Error",JOptionPane.WARNING_MESSAGE);
						
						else
						{
							sql = "delete from cust_info1 where c_id= "+tid.getText();						
							prstm = cn.prepareStatement(sql);
							prstm.execute();
							prstm.close();						
							JOptionPane.showMessageDialog(null,"*** Record Successfully Deleted ***");
							refresh();
							getMax();
							flg=0;
							dispTab();
						}
					}
				}
				
				catch(Exception ex)
				{
					JOptionPane.showMessageDialog(null,"Can't Delete Customer","Delete Error",JOptionPane.ERROR_MESSAGE);
				}
			}
			
			if(e.getSource()==updt)
			{
				if(flg==0)
					JOptionPane.showMessageDialog(null,"Search the Record Before Update !!!","Update Error",JOptionPane.WARNING_MESSAGE);
				
				else
				{
					if(tid.getText().length()==0 || tnm.getText().length()==0 || taddr.getText().length()==0 || tphnno.getText().length()==0 || temail.getText().length()==0)
						
						JOptionPane.showMessageDialog(null,"All fields are required !!!","Update Error",JOptionPane.WARNING_MESSAGE);
					
					else
					{
						sql = "update cust_info1 set c_name='"+tnm.getText()+"',c_add='"+taddr.getText()+"',c_phone="+tphnno.getText()+",c_mail='"+temail.getText()+"' where c_id="+tid.getText();						
						prstm = cn.prepareStatement(sql);
						prstm.execute();
						prstm.close();						
						JOptionPane.showMessageDialog(null,"*** Record Successfully Updated ***");
						refresh();
						getMax();
						flg=0;
						dispTab();
					}
				}
			}
			
			if(e.getSource()==bck)
			{
				new home1();
				dispose();
			}
			
			if(e.getSource()==srch)
			{
				save.setEnabled(false);
				pnl.setVisible(true);
				t.requestFocus();
			}
			
			if(e.getSource()==show)
			{
				dispTab();
			}
			
			if(e.getSource()==ext)
				System.exit(0);
		}
		
		catch(Exception ea)
		{
			JOptionPane.showMessageDialog(null,"Invalid Operation","Operation Error",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void itemStateChanged(ItemEvent e)
	{
		try
		{
			if(e.getSource()==li)
			{
				String arr[] = li.getSelectedItem().split("\\-");
				
				if(srch_nm.isSelected())
					sql = "select * from cust_info1 where c_name = '"+arr[0]+"'";
				else
					sql = "select * from cust_info1 where c_phone = "+arr[1];
				
				rs = stm.executeQuery(sql);
				rs.next();
				tid.setText(rs.getString(1));
				tnm.setText(rs.getString(2));
				taddr.setText(rs.getString(3));
				tphnno.setText(rs.getString(4));
				temail.setText(rs.getString(5));
				flg=1;
				t.setText("");
				li.clear();
			}
		}

		catch(Exception ex)
		{
			JOptionPane.showMessageDialog(null,"Invalid Operation","Operation Error",JOptionPane.ERROR_MESSAGE);
		}
	}
public static void main(String args[])
{
     new cust_details();
}
}



/*
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.sql.*;


class cust_details extends JFrame implements ActionListener,ItemListener
{
  
  JButton insrt,dlt,udt,srch,bk,ext,clr;
  
  JLabel lid,lname,ladd,lph,lsrch,ldt,ltitle,limg;
  JTextField tid,tname,tph,tsrch, tadd;
  DateButton tdt;
  ImageIcon i;
  JComboBox cb_srch;
  List l;
  Font f;
  
    Connection cn = null;
    PreparedStatement prstm;
     ResultSet rs;
    Statement stm;
    String sql;
    int cno;
  

cust_details()
       {
            super("Customer Information");
            setSize(800,400);
            setLocation(150,100);
            setLayout(null);
  
 i=new ImageIcon("");
 limg=new JLabel(i);
 
  lid=new JLabel("Customer ID");
  lname=new JLabel("Customer Name");
  ladd=new JLabel("Customer Address");
  lph=new JLabel("Phone No.");
  lsrch=new JLabel("Search By:");
  ldt=new JLabel("Date");
  ltitle=new JLabel("CUSTOMER DETAILS");
  f=new Font("Arial",Font.BOLD,25);
  ltitle.setFont(f);

  l=new List();

  tid=new JTextField();
  tname=new JTextField();
  tadd=new JTextField();
  tph=new JTextField();
  tsrch=new JTextField();
  tdt=new DateButton();
  cb_srch=new JComboBox();
  insrt=new JButton("Insert");
  dlt=new JButton("Delete");
  udt=new JButton("Update");
  srch=new JButton("Search");
  bk=new JButton("Back");
  ext=new JButton("Exit");
  clr=new JButton("Clear");
  
  
 
   add(lid);     add(lname);  add(ladd);  add(lph);  add(tid);  add(tname);  add(tadd);   add(tph);
   add(insrt);   add(dlt);   add(udt);  add(srch);   add(bk);     add(ext);
      add(ldt);  add(tdt);    add(clr);
   add(cb_srch); add(tsrch); add(lsrch);  add(ltitle); 
   cb_srch.addItem("select");
   cb_srch.addItem("By ID");
   cb_srch.addItem("By Name");
   add(limg);   //add(limg1);

   add(l);
   l.setBounds(510,120,250,200); 
 // limg.setBounds(480,120,300,300);   
  ltitle.setBounds(200,10,300,30);
  lid.setBounds(30,80,100,30);
  tid.setBounds(140,80,50,30);

  lsrch.setBounds(530,50,90,20);
  cb_srch.setBounds(630,50,150,20);
  

  lname.setBounds(210,80,130,30);
  tname.setBounds(350,80,150,30);
 
  tsrch.setBounds(630,80,150,30);

 
  lph.setBounds(30,120,100,30);
  tph.setBounds(140,120,150,30);

   ldt.setBounds(300,120,80,30);
  tdt.setBounds(350,120,150,30);


   ladd.setBounds(30,160,150,30);
  tadd.setBounds(190,160,280,50);


 
  insrt.setBounds(30,230,100,30);
  srch.setBounds(140,230,100,30);
  dlt.setBounds(250,230,100,30);
  udt.setBounds(30,270,100,30);
  
  bk.setBounds(140,270,100,30);
  clr.setBounds(250,270,100,30);
  ext.setBounds(360,230,100,70);
 
   insrt.setMnemonic('I');
   dlt.setMnemonic('D');
   udt.setMnemonic('U');
   srch.setMnemonic('S');
   bk.setMnemonic('B');
   ext.setMnemonic('E');
   clr.setMnemonic('C');

   tid.setEditable(false);

   //insrt.setEnabled(false);

   insrt.addActionListener(this);
   dlt.addActionListener(this);
   udt.addActionListener(this);
   srch.addActionListener(this);
   bk.addActionListener(this);
   ext.addActionListener(this);
   clr.addActionListener(this);
   l.addItemListener(this);
   text_validator(tph);
   text_val(tname);
   try
    {
     cn = DriverManager.getConnection("jdbc:mysql:///yogita","root","");
     stm=cn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
     rs=stm.executeQuery("select * from customer order by cid");
     rs.first();
     
     
    }
   catch(Exception e1)
   {
    e1.printStackTrace();
   }

tsrch.addKeyListener(new KeyAdapter()
    {
      public void keyPressed(KeyEvent e)
      {
         if(e.getKeyChar()==KeyEvent.VK_ENTER)  //for enter key pressed
         {
           try
            {
              
     rs=stm.executeQuery("select * from customer where cname like '%"+ tsrch.getText() + "%'");
     while(rs.next())
     l.addItem(rs.getString(2));
            
          }
          catch(SQLException ee) { ee.printStackTrace();}
        }
      }
    });

   


   
   setVisible(true);
   setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
   getMax();
  }
void text_validator(final JTextField tt)
{
   tt.addKeyListener(new KeyAdapter()
   {
    public void keyTyped(KeyEvent e)
	 {
	  if(tt.getText().length()<10 && e.getKeyChar()>='0' && e.getKeyChar()<='9')
	       super.keyTyped(e); // Optional
	   else
	     {
		   e.consume();  //erase the event
		 
		 }
	 }
	  
   });
  }
 void text_val(final JTextField tt)
{
   tt.addKeyListener(new KeyAdapter()
   {
    public void keyTyped(KeyEvent e)
	 {
	  if(e.getKeyChar()>='a' && e.getKeyChar()<='z' || e.getKeyChar()>='A' && e.getKeyChar()<='Z' || e.getKeyChar()<=' ')
	       super.keyTyped(e); // Optional
	   else
	     {
		   e.consume();  //erase the event
		 
		 }
	 }
	  
   });
  }

  void getMax()
  {
    try
     {
       sql="select max(cid) from customer";
       rs=stm.executeQuery(sql);
       rs.next();
       cno=rs.getInt(1);
         cno++;
         tid.setText(""+cno);
     }
    catch(Exception e2)
    {
      cno=1;
      tid.setText(""+cno);
    }
  }


public void itemStateChanged(ItemEvent e2)
 {
   if(e2.getSource()==l)
   {
    try
     {
     if(cb_srch.getSelectedIndex()==2)
         {
           
            String sql;
           sql="select * from customer where cname='"+l.getSelectedItem()+"'";
           rs=stm.executeQuery(sql);
           rs.next();
           tid.setText(rs.getString(1));
           tname.setText(rs.getString(2));
           tadd.setText(rs.getString(3));
           tph.setText(rs.getString(4));
           tdt.setText(rs.getString(5));
         }
    }
   catch(Exception ex2)
    {
      JOptionPane.showMessageDialog(null,"Record Does Not Exists");}
    } 
   }


public void actionPerformed(ActionEvent e)
  {
    try
    {
    if(e.getSource()==insrt)
    {
      try
      {
        insrt.setEnabled(true);
        srch.setEnabled(false);
        dlt.setEnabled(false);
        udt.setEnabled(false);
        bk.setEnabled(false);
        ext.setEnabled(false);
        
      if(tid.getText().length()==0 || tname.getText().length()==0 || tadd.getText().length()==0 || tph.getText().length()==0 || tdt.getText().length()==0)
   {
     JOptionPane.showMessageDialog(null,"All fields are neccessary");
      
    }
    else if(tph.getText().length()<10)
      {
        JOptionPane.showMessageDialog(null,"Phone Number must be 10 digits");
        tph.setText("");
      }

     else 
    {
       
    int ans=JOptionPane.showConfirmDialog(null,"Do you want to save?");
     if(ans==0)
     {
       
      String phn;
      int cid;
         
      cid=Integer.parseInt(tid.getText());
      
     
    sql = "insert into customer values("+cid+ ",'" +tname.getText()+ "','" +tadd.getText()+ "'," +tph.getText()+ ",'"+tdt.getText()+"')";
     prstm = cn.prepareStatement(sql);
     prstm.execute();
     prstm.close();
    JOptionPane.showMessageDialog(null,"Record successfully added...");
     tid.setText("");
         tname.setText("");
         tadd.setText("");
         tph.setText("");
         tdt.setText("");
         
    }
   
    else if(ans==1)
      JOptionPane.showMessageDialog(null,"Your record is not saved");
      tid.setText("");
         tname.setText("");
         tadd.setText("");
         tph.setText("");
          tdt.setText("");
    }
     }
   catch(Exception ex)
    {   ex.printStackTrace();
      //JOptionPane.showMessageDialog(null,"Record Already Exists");
      tid.setText("");
         tname.setText("");
         tadd.setText("");
         tph.setText("");
         cb_srch.setSelectedIndex(0);
         tsrch.setText("");
          tdt.setText("");

    }
    }
   
   if(e.getSource()==dlt)
    {
     try
     {
      insrt.setEnabled(false);
        srch.setEnabled(false);
      //  dlt.setEnabled(false);
        udt.setEnabled(false);
         bk.setEnabled(false);
        ext.setEnabled(false);
       
       
        
     if(tid.getText().length()==0 || tname.getText().length()==0 || tadd.getText().length()==0 || tph.getText().length()==0)
   {
     JOptionPane.showMessageDialog(null,"All fields are neccessary");
    }

     else
    {
    
 int ans=JOptionPane.showConfirmDialog(null,"Do you want to delete?");
     if(ans==0)
     {
      
      String phn,sql;
      int cid;
         
      cid=Integer.parseInt(tid.getText());
      
     
     sql = "delete from customer where cid="+cid; 
    prstm = cn.prepareStatement(sql);
     prstm.execute();
     prstm.close();
    JOptionPane.showMessageDialog(null,"Record successfully deleted...");
         tid.setText("");
         tname.setText("");
         tadd.setText("");
         tph.setText("");
         tdt.setText("");
        
    }
   
    else if(ans==1)
         JOptionPane.showMessageDialog(null,"Your record is not deleted");
         tid.setText("");
         tname.setText("");
         tadd.setText("");
         tph.setText("");
         tdt.setText("");
    } 
   }
  catch(Exception ex1)
    {
       JOptionPane.showMessageDialog(null,"Record Not Found");
    } 
    }
   if(e.getSource()==udt)
    {
     
       insrt.setEnabled(false);
        srch.setEnabled(false);
        dlt.setEnabled(false);
        //udt.setEnabled(false);
         bk.setEnabled(false);
        ext.setEnabled(false);
        tdt.setEnabled(false);
       
       
        
       if(tid.getText().length()==0 || tname.getText().length()==0 || tadd.getText().length()==0 || tph.getText().length()==0)
   {
     JOptionPane.showMessageDialog(null,"All fields are neccessary");
    }

     else
    {
    
 int ans=JOptionPane.showConfirmDialog(null,"Do you want to modify?");
     if(ans==0)
     {
      
      String phn,sql;
      int cid;
         
      cid=Integer.parseInt(tid.getText());
      
     
    sql = "update customer set cname='"+tname.getText()+"',addr='"+tadd.getText()+"',ph_no='"+tph.getText()+"' where cid="+cid;
      
    prstm = cn.prepareStatement(sql);
     prstm.execute();
     prstm.close();
    JOptionPane.showMessageDialog(null,"Record successfully modified...");
         tid.setText("");
         tname.setText("");
         tadd.setText("");
         tph.setText("");
         tdt.setText("");
    }
   
    else if(ans==1)
      JOptionPane.showMessageDialog(null,"Your record is not modified");
         tid.setText("");
         tname.setText("");
         tadd.setText("");
         tph.setText("");
         tdt.setText("");
    }  
    }
    
   if(e.getSource()==srch)
    {
     try
      {
      insrt.setEnabled(false);
       // srch.setEnabled(false);
        dlt.setEnabled(true);
        udt.setEnabled(true);
         bk.setEnabled(false);
        ext.setEnabled(false);
        if(cb_srch.getSelectedIndex()==0 || tsrch.getText().length()==0)
       {
         JOptionPane.showMessageDialog(null,"select ID or Name and enter corresponding input");
         tsrch.requestFocus();
       }
     else if(cb_srch.getSelectedIndex()==1)
         {
           
           String sql;
           sql="select * from customer where cid="+tsrch.getText();
           rs=stm.executeQuery(sql);
           rs.next();
           tid.setText(rs.getString(1));
           tname.setText(rs.getString(2));
          
           tadd.setText(rs.getString(3));
           tph.setText(rs.getString(4));
           tdt.setText(rs.getString(5));
           
         }

        }
      catch(Exception ab)
       { System.out.println(ab);}


     }
   
   if(e.getSource()==bk)
   {
     project m1 = new project();
            m1.setVisible(true);
            setVisible(false);
  
        }
   if(e.getSource()==ext)
    {
       System.exit(0);
     }
   if(e.getSource()==clr)
   {
     tid.setText("");
      tname.setText("");
      tadd.setText("");
      tph.setText("");
      tdt.setText("");
       l.clear();
      cb_srch.setSelectedIndex(0);
      tsrch.setText("");
      insrt.setEnabled(true);
      udt.setEnabled(true);
      dlt.setEnabled(true);
      srch.setEnabled(true);
      bk.setEnabled(true);
      ext.setEnabled(true);
      getMax();
      tid.setEnabled(false);
   }
  
     }
    
   catch(Exception e1)
    {
       System.out.println(e1);
     }
   }
public static void main(String args[]) 
  {
   new cust_details();
  }
}

*/

